{
    "variables": {
        "commit_url": "{{env `COMMIT_URL`}}",
        "image_folder": "/imagegeneration",
        "commit_file": "/imagegeneration/commit.txt",
        "metadata_file": "/imagegeneration/metadatafile",
        "installer_script_folder": "/imagegeneration/installers",
        "helper_script_folder": "/imagegeneration/helpers",
        "image_version": "dev",
        "image_os": "ubuntu20",
        "github_feed_token": "{{ env `GITHUB_TOKEN` }}"
    },
    "sensitive-variables": ["github_feed_token"],
    "builders": [
        {
            "type": "docker",
            "image": "buildpack-deps:20.04",
            "commit": true,
            "privileged": true,
            "volumes": {
                "/var/run/docker.sock": "/var/run/docker.sock"
            }
        }
    ],
    "post-processors": [
      {
        "type": "docker-tag",
        "repository": "jameswoolfenden/act-environments-ubuntu",
        "tag": "20.04"
      }
    ],
    "provisioners": [
        {
            "type": "shell",
            "inline": [
                "apt-get update",
                "apt-get -y install sudo lsb-core software-properties-common apt-utils",
                "add-apt-repository 'deb http://security.ubuntu.com/ubuntu focal-security main'"
            ],
            "execute_command": "sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "inline": [
                "mkdir {{user `image_folder`}}",
                "chmod 777 {{user `image_folder`}}",
                "echo {{user `commit_url`}} > {{user `commit_file`}}",
                "chmod +r {{user `commit_file`}}"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "scripts":[
                "{{template_dir}}/scripts/base/repos.sh"
            ],
            "environment_vars": [
                "DEBIAN_FRONTEND=noninteractive"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "inline": [
                "apt-get update",
                "apt-get dist-upgrade -y",
                "echo '* soft nofile 65536 \n* hard nofile 65536' >> /etc/security/limits.conf",
                "echo 'session required pam_limits.so' >> /etc/pam.d/common-session",
                "echo 'session required pam_limits.so' >> /etc/pam.d/common-session-noninteractive",
                "echo 'DefaultLimitNOFILE=65536' >> /etc/systemd/system.conf"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "file",
            "source": "{{template_dir}}/scripts/helpers",
            "destination": "{{user `helper_script_folder`}}"
        },
        {
            "type": "file",
            "source": "{{template_dir}}/scripts/installers",
            "destination": "{{user `installer_script_folder`}}"
        },
        {
            "type": "shell",
            "scripts":[
                "{{template_dir}}/scripts/installers/2004/preparemetadata.sh"
            ],
            "environment_vars": [
                "IMAGE_VERSION={{user `image_version`}}",
                "METADATA_FILE={{user `metadata_file`}}",
                "HELPER_SCRIPTS={{user `helper_script_folder`}}"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "inline": [
                "echo ImageVersion={{user `image_version`}} | tee -a /etc/environment",
                "echo ImageOS={{user `image_os`}} | tee -a /etc/environment"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "scripts": [
                "{{template_dir}}/scripts/installers/7-zip.sh",
                "{{template_dir}}/scripts/installers/ansible.sh",
                "{{template_dir}}/scripts/installers/azcopy.sh",
                "{{template_dir}}/scripts/installers/azure-cli.sh",
                "{{template_dir}}/scripts/installers/azure-devops-cli.sh",
                "{{template_dir}}/scripts/installers/2004/basic.sh",
                "{{template_dir}}/scripts/installers/aws.sh",
                "{{template_dir}}/scripts/installers/build-essential.sh",
                "{{template_dir}}/scripts/installers/cmake.sh",
                "{{template_dir}}/scripts/installers/docker-compose.sh",
                "{{template_dir}}/scripts/installers/docker-moby.sh",
                "{{template_dir}}/scripts/installers/docker.sh",
                "{{template_dir}}/scripts/installers/gcc.sh",
                "{{template_dir}}/scripts/installers/git.sh",
                "{{template_dir}}/scripts/installers/2004/go.sh",
                "{{template_dir}}/scripts/installers/google-chrome.sh",
                "{{template_dir}}/scripts/installers/heroku.sh",
                "{{template_dir}}/scripts/installers/hhvm.sh",
                "{{template_dir}}/scripts/installers/image-magick.sh",
                "{{template_dir}}/scripts/installers/java-tools.sh",
                "{{template_dir}}/scripts/installers/kind.sh",
                "{{template_dir}}/scripts/installers/2004/kubernetes-tools.sh",
                "{{template_dir}}/scripts/installers/leiningen.sh",
                "{{template_dir}}/scripts/installers/miniconda.sh",
                "{{template_dir}}/scripts/installers/mysql.sh",
                "{{template_dir}}/scripts/installers/nodejs.sh",
                "{{template_dir}}/scripts/installers/phantomjs.sh",
                "{{template_dir}}/scripts/installers/pollinate.sh",
                "{{template_dir}}/scripts/installers/postgresql.sh",
                "{{template_dir}}/scripts/installers/ruby.sh",
                "{{template_dir}}/scripts/installers/rust.sh",
                "{{template_dir}}/scripts/installers/sbt.sh",
                "{{template_dir}}/scripts/installers/selenium.sh",
                "{{template_dir}}/scripts/installers/sphinx.sh",
                "{{template_dir}}/scripts/installers/terraform.sh",
                "{{template_dir}}/scripts/installers/zeit-now.sh",
                "{{template_dir}}/scripts/installers/dpkg-config.sh"
            ],
            "environment_vars": [
                "METADATA_FILE={{user `metadata_file`}}",
                "HELPER_SCRIPTS={{user `helper_script_folder`}}",
                "DEBIAN_FRONTEND=noninteractive"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "file",
            "source": "{{template_dir}}/toolcache-2004.json",
            "destination": "{{user `installer_script_folder`}}/toolcache.json"
        },
        {
            "type": "shell",
            "scripts":[
                "{{template_dir}}/scripts/helpers/containercache.sh",
                "{{template_dir}}/scripts/installers/2004/python.sh"
            ],
            "environment_vars": [
                "METADATA_FILE={{user `metadata_file`}}",
                "HELPER_SCRIPTS={{user `helper_script_folder`}}",
                "INSTALLER_SCRIPT_FOLDER={{user `installer_script_folder`}}",
                "GITHUB_FEED_TOKEN={{user `github_feed_token`}}"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "scripts":[
                "{{template_dir}}/scripts/installers/boost.sh"
            ],
            "environment_vars": [
                "METADATA_FILE={{user `metadata_file`}}",
                "HELPER_SCRIPTS={{user `helper_script_folder`}}",
                "BOOST_VERSIONS=1.69.0",
                "BOOST_DEFAULT=1.69.0"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "file",
            "source": "{{user `metadata_file`}}",
            "destination": "{{template_dir}}/Ubuntu2004-README.md",
            "direction": "download"
        },
        {
            "type": "shell",
            "inline": [
                "rm -rf {{user `helper_script_folder`}}",
                "rm -rf {{user `installer_script_folder`}}",
                "chmod 755 {{user `image_folder`}}"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "file",
            "source": "{{template_dir}}/config/ubuntu2004.conf",
            "destination": "/tmp/"
        },
        {
            "type": "shell",
            "inline": [
                "mkdir -p /etc/vsts",
                "cp /tmp/ubuntu2004.conf /etc/vsts/machine_instance.conf"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        }
    ]
}
